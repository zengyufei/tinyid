# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release TinyId

on:
  push:
    tags:
      - releases/[0-9]+.[0-9]+.[0-9]+
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # 更新到 v4
      - name: Set up JDK 1.8
        uses: actions/setup-java@v4 # 更新到 v4
        with:
          java-version: 1.8
      - uses: olegtarasov/get-tag@v2.1.4 # 请检查此Action是否有更高版本
        id: tagName
        with:
          tagRegex: "releases/(.*)"
          tagRegexGroup: 1

      - name: Set version
        run: |
          mvn versions:set -DnewVersion=${{ steps.tagName.outputs.tag }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Check and Get Release Info
        id: get_release_info
        uses: actions/github-script@v6
        env:
          TAG_NAME_TO_CHECK: ${{ github.ref }}
        with:
          script: |
            try {
              const { repo, owner } = context.repo;
              const tag = process.env.TAG_NAME_TO_CHECK.replace('refs/tags/', '');
              console.log(`Checking for Release with tag: ${tag}`);
              const response = await github.rest.repos.getReleaseByTag({
                owner,
                repo,
                tag: tag,
              });
              console.log(`Release for tag ${tag} already exists. ID: ${response.data.id}`);
              core.setOutput('release_exists', 'true');
              core.setOutput('upload_url', response.data.upload_url);
            } catch (error) {
              if (error.status === 404) {
                console.log(`No Release found for tag ${process.env.TAG_NAME_TO_CHECK}.`);
                core.setOutput('release_exists', 'false');
                core.setOutput('upload_url', '');
              } else {
                console.error(`Error checking release: ${error.message}`);
                throw error;
              }
            }

      - name: Create Release (if not exists)
        id: create_release
        if: steps.get_release_info.outputs.release_exists == 'false'
        uses: actions/create-release@v1.1.5 # 更新到推荐的最新 v1 版本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.tagName.outputs.tag }}
          body: |
            Changes in this Release
            - test release
          draft: false
          prerelease: false

      - name: Set Upload URL
        id: set_upload_url
        run: |
          UPLOAD_URL="${{ steps.create_release.outputs.upload_url }}"
          if [ -z "$UPLOAD_URL" ]; then
            UPLOAD_URL="${{ steps.get_release_info.outputs.upload_url }}"
          fi
          echo "Final upload URL: $UPLOAD_URL"
          echo "upload_url=$UPLOAD_URL" >> $GITHUB_OUTPUT # 这是新语法，不会触发警告

      - name: Upload TinyId client Release Asset
        id: upload-release-client-asset
        if: steps.set_upload_url.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1.0.2 # 更新到推荐的最新 v1 版本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
          asset_path: ./tinyid-client/target/tinyid-client-${{ steps.tagName.outputs.tag }}.jar
          asset_name: tinyid-client-${{ steps.tagName.outputs.tag }}.jar
          asset_content_type: application/zip

      - name: Upload TinyId server Release Asset
        id: upload-release-server-asset
        if: steps.set_upload_url.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1.0.2 # 更新到推荐的最新 v1 版本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
          asset_path: ./tinyid-server/target/tinyid-server-${{ steps.tagName.outputs.tag }}.jar
          asset_name: tinyid-server-${{ steps.tagName.outputs.tag }}.jar
          asset_content_type: application/zip
