# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release TinyId

on:
  push:
    tags:
      - releases/[0-9]+.[0-9]+.[0-9]+
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
	
      # Checkout 代码
      - name: Checkout Repository
        uses: actions/checkout@v2
		
      # 设置 JDK 1.8
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
		  
      # 使用 olegtarasov/get-tag 获取纯净的标签版本号
      - uses: olegtarasov/get-tag@v2.1.4
        id: tagName
        with:
          tagRegex: "releases/(.*)"  # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
          tagRegexGroup: 1 # Optional. Default is 1.

      # 设置 Maven 项目版本
      - name: Set Maven Project Version
        run: |
          mvn versions:set -DnewVersion=${{ steps.tagName.outputs.tag }}

      # 构建 Maven 项目
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # 检查 Release 是否已存在并获取其信息
      - name: Check if Release Exists
        id: get_release_info
        uses: actions/github-script@v6
        env:
          TAG_NAME_TO_CHECK: ${{ github.ref }}
        with:
          script: |
            try {
              const { repo, owner } = context.repo;
              const tag = process.env.TAG_NAME_TO_CHECK.replace('refs/tags/', '');
              console.log(`Checking for Release with tag: ${tag}`);
              const response = await github.rest.repos.getReleaseByTag({
                owner,
                repo,
                tag: tag,
              });
              console.log(`Release for tag ${tag} already exists. ID: ${response.data.id}`);
              core.setOutput('release_exists', 'true');
            } catch (error) {
              if (error.status === 404) {
                console.log(`No Release found for tag ${process.env.TAG_NAME_TO_CHECK}.`);
                core.setOutput('release_exists', 'false');
              } else {
                console.error(`Error checking release: ${error.message}`);
                throw error; // 对于其他错误，仍然抛出
              }
            }

      # 如果 Release 不存在，则创建 Release
      - name: Create Release (if not exists)
        id: create_release
        if: steps.get_release_info.outputs.release_exists == 'false' # 仅在Release不存在时创建
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.tagName.outputs.tag }}
          body: |
            Changes in this Release
            - test release
          draft: false
          prerelease: false

  
      - name: Upload TinyId client Release Asset
        id: upload-release-client-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./tinyid-client/target/tinyid-client-${{ steps.tagName.outputs.tag }}.jar
          asset_name: tinyid-client-${{ steps.tagName.outputs.tag }}.jar
          tag: releases/${{ steps.tagName.outputs.tag }}

  
      - name: Upload TinyId server Release Asset
        id: upload-release-server-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./tinyid-server/target/tinyid-server-${{ steps.tagName.outputs.tag }}.jar
          asset_name: tinyid-server-${{ steps.tagName.outputs.tag }}.jar
          tag: releases/${{ steps.tagName.outputs.tag }}
